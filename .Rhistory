noweight<-is.na(M2$WEIGHT_1stT) & !is.na(M2$WEIGHT)
M2[noweight,"WEIGHT_1stT"]=M2[noweight,"WEIGHT"]+M2[noweight,"preddif"]
M2$flAA86[noweight]="imputed3"
## since height was predicted just from the mean, there should be no NAs left by now. check:
sum(is.na(M2$WEIGHT)); sum(is.na(M2$WEIGHT_1stT)); sum(is.na(M2$HEIGHT))
hist(M2$WEIGHT, breaks=50, col="grey")
hist(M2$HEIGHT, breaks=50, col="grey")
hist(M2$WEIGHT, breaks=50, col="grey")
table(M2$flAA85)
table(M2$flAA86)
table(M2$flAA87)
M3=M2[,-(ncol(M2):(ncol(M2)-2))]
M3$REFMEAN=NULL
M3$REFSD=NULL
M3$GA<-M3$GA/7
M3[(M3$SEX<1 | M3$SEX>2), "SEX"] = NA
M3[M3$GA<15, "GA"] = NA
M3[M3$BIRTHWEIGHT==0,"BIRTHWEIGHT"] = NA
table(M3$PARITY,useNA="a")
table(round(M3$GA,0),useNA="a")
table(M3$SEX,useNA="a")
table(round(M3$BIRTHWEIGHT,-2),useNA="a")
min(M3$BIRTHWEIGHT)
min(M3$BIRTHWEIGHT,na.rm=T)
ref=read.table("NSGA_BirthWeight_by_Skjaerven_2000_MEANSD.txt",header=T)
head(ref)
rboys<-ref[ref$SEX==1,]
rgirls<-ref[ref$SEX==2,]
mboys=(M3$SEX==1 & !is.na(M3$GA))
mgirls=(M3$SEX==2 & !is.na(M3$GA))
mmiss=(is.na(M3$SEX) & !is.na(M3$GA))
M3$REFMEAN[which(mboys)] = approx(rboys$GA, rboys$MEANWEIGHT, M3$GA[which(mboys)])$y
M3$REFMEAN[which(mgirls)] = approx(rgirls$GA, rgirls$MEANWEIGHT, M3$GA[which(mgirls)])$y
### when SEX is NA, but GA is known, just use both genders and take the average
M3$REFMEAN[which(mmiss)] = (approx(rgirls$GA, rgirls$MEANWEIGHT, M3$GA[mmiss])$y +
approx(rboys$GA, rboys$MEANWEIGHT, M3$GA[which(mmiss)])$y)/2
M3$REFSD[which(mboys)]=approx(rboys$GA, rboys$SD, M3$GA[which(mboys)])$y
M3$REFSD[which(mgirls)]=approx(rgirls$GA, rgirls$SD, M3$GA[which(mgirls)])$y
M3$REFSD[which(mmiss)]=(approx(rgirls$GA, rgirls$SD, M3$GA[which(mmiss)])$y +
approx(rboys$GA, rboys$SD, M3$GA[which(mmiss)])$y)/2
## for the output, calculate the percentile of weight, using reference MEAN and SD
M3$PCTskjaerven<-pnorm(M3$BIRTHWEIGHT,M3$REFMEAN,M3$REFSD)*100
## SGA can then be determined simply
M3$SGAskjaerven<-as.numeric(M3$PCTskjaerven<10)
hist(M3$PCTskjaerven,breaks=100,col="grey")
abline(v=10,col="red")
text(paste("total number of SGAs:", sum(M3$SGAskjaerven,na.rm=T)),x=40, y=1300,col="darkred")
hadlock=function(ga,weight,refmean,refsd){
## input requires GA in rounded weeks
## weight = birthweight (in g)
## sex = 1 (boys) or 2 (girls)
## refmean and refsd are calculated at 280 days
## use this correction if input is in completed weeks:
# ga=ga+0.5
## original Hadlock equation is valid only for GA >=25
prop25=(299.1 - 31.85 * ga + 1.094 * ga^2 - 0.01055 * ga^3)/100
prop24=(-5.86048381 + 1.419180433 * ga - 0.116517911 * ga^2 + 0.004154453 * ga^3)/100
prop=ifelse(ga>=25, prop25, prop24)
## limits for reasonable prediction
prop[which(ga>42.5 | ga<19.5)]=NA
pnorm(weight, prop*refmean, prop*refsd)*100
}
mw40_boys=mean(M3[which(M3$GA==40 & M3$SEX==1),"BIRTHWEIGHT"], na.rm=T)
mw40_girls=mean(M3[which(M3$GA==40 & M3$SEX==2),"BIRTHWEIGHT"], na.rm=T)
sd40_boys=sd(M3[which(M3$GA==40 & M3$SEX==1),"BIRTHWEIGHT"], na.rm=T)
sd40_girls=sd(M3[which(M3$GA==40 & M3$SEX==2),"BIRTHWEIGHT"], na.rm=T)
M3$REFMEAN[which(mboys)]=mw40_boys
M3$REFMEAN[which(mgirls)]=mw40_girls
M3$REFMEAN[which(mmiss)]=mean(mw40_boys,mw40_girls)
M3$REFSD[which(mboys)]=sd40_boys
M3$REFSD[which(mgirls)]=sd40_girls
M3$REFSD[which(mmiss)]=mean(sd40_boys,sd40_girls)
M3$PCThadlock<-hadlock(M3$GA,M3$BIRTHWEIGHT,M3$REFMEAN,M3$REFSD)
M3$PCThadlock<-hadlock(M3$GA,M3$BIRTHWEIGHT,M3$REFMEAN,M3$REFSD)
## SGA can then be determined simply
M3$SGAhadlock<-as.numeric(M3$PCThadlock<10)
table(M3$SGAskjaerven,M3$SGAhadlock,dnn=c("Skjaerven","Hadlock"),useNA="a")
gardosi<-function(weight,height,sex,parity,ga,birthweight) {
# sex       sex of the fetus (coded 2 for girls, 1 for boys)
# parity    parity              first child is 0
# ga        gestational age in weeks
## This algorithm uses mother information to produce a personalized expected weight at term.
## The coefficients used here come from article Gardosi 2009, "The value of customised centiles..."
## note that the means of mother height and weight do not match ours - neither does the sex correction
## but the resulting predictions do not show any systemic bias
w = weight - 65    # mean center (1st trim)
wa = 9.066 * w - 0.067 * w^2
h = height - 166      # mean center
ha = 8.316*h - 0.006 * h^3
paritycorr = rep(20,189)                 # Guess no one has more than 20 kids!
paritycorr[1:4] = c(0,136,174.4,183.4)
p = paritycorr[parity+1]
s = (-1)^(sex+1) * 64.1
tow = 3575.2 + wa + ha + s + p          # predicted weight at 40 weeks GA
tsd = tow*0.11        # 11 % coef. of var. from original article (gardosi 1995) matches our data
#hadlock(ga, birthweight, tow, tsd)
tow
}
M3$PCTgardosi<-gardosi(M3$WEIGHT_1stT,M3$HEIGHT,M3$SEX,M3$PARITY,M3$GA,M3$BIRTHWEIGHT)
gardosi<-function(weight,height,sex,parity,ga,birthweight) {
# sex       sex of the fetus (coded 2 for girls, 1 for boys)
# parity    parity              first child is 0
# ga        gestational age in weeks
## This algorithm uses mother information to produce a personalized expected weight at term.
## The coefficients used here come from article Gardosi 2009, "The value of customised centiles..."
## note that the means of mother height and weight do not match ours - neither does the sex correction
## but the resulting predictions do not show any systemic bias
w = weight - 65    # mean center (1st trim)
wa = 9.066 * w - 0.067 * w^2
h = height - 166      # mean center
ha = 8.316*h - 0.006 * h^3
paritycorr = rep(20,189)                 # Guess no one has more than 20 kids!
paritycorr[1:4] = c(0,136,174.4,183.4)
p = paritycorr[parity+1]
s = (-1)^(sex+1) * 64.1
tow = 3575.2 + wa + ha + s + p          # predicted weight at 40 weeks GA
tsd = tow*0.11        # 11 % coef. of var. from original article (gardosi 1995) matches our data
hadlock(ga, birthweight, tow, tsd)
#tow
}
M3$PCTgardosi<-gardosi(M3$WEIGHT_1stT,M3$HEIGHT,M3$SEX,M3$PARITY,M3$GA,M3$BIRTHWEIGHT)
M3$SGAgardosi<-as.numeric(M3$PCTgardosi<10)
out$GA=out$GA*7
head(out); dim(out)
out=M3[,c("PREG_ID","CHILDNUM","GA","SEX","BIRTHWEIGHT",
"PCTskjaerven","PCThadlock","PCTgardosi", "SGAskjaerven","SGAhadlock","SGAgardosi")]
out$GA=out$GA*7
head(out); dim(out)
inv_hadlock=function(ga,weight){
# calculates the tow, given weight at any GA
ga=ga/7
prop=(298.8 - 31.85 * ga + 1.094 * ga^2 - 0.01055 * ga^3)/100
weight/prop
}
normies=M2[which(M2$GA>258 & M2$GA<295),]
attach(normies)
rm(BIRTHWEIGHT, SEX, WEIGHT_1stT, HEIGHT, PARITY, W2, W3, H2, H3, P2, P3, P4)
BIRTHWEIGHT=inv_hadlock(GA, BIRTHWEIGHT)
SEX=SEX-1
WEIGHT_1stT=WEIGHT_1stT-mean(WEIGHT_1stT,na.rm=T)
W2=WEIGHT_1stT^2
W3=WEIGHT_1stT^3
HEIGHT=HEIGHT-mean(HEIGHT,na.rm=T)
H2=HEIGHT^2
H3=HEIGHT^3
P2=as.numeric(PARITY==2)
P3=as.numeric(PARITY==3)
P4=as.numeric(PARITY==4)
PARITY=as.numeric(PARITY==1)
nr=lm(BIRTHWEIGHT~SEX+WEIGHT_1stT+W2+W3+HEIGHT+H2+H3+PARITY+P2+P3+P4)
summary(nr)
detach(normies)
head(out); dim(out)
gardosi2<-function(weight,height,sex,parity,ga,birthweight) {
# sex       sex of the fetus (coded 2 for girls, 1 for boys)
# parity    parity              first child is 0
# ga        gestational age in weeks
## This algorithm uses mother information to produce a personalized expected weight at term.
## The coefficients used here come from article Gardosi 2009, "The value of customised centiles..."
## note that the means of mother height and weight do not match ours - neither does the sex correction
## but the resulting predictions do not show any systemic bias
#perc = 100 * pnorm((birthweight - grow)/(prop * 410))
w = weight - 63    # mean center (1st trim)
wa = 8.872*w - 0.0548*w^2 + 0.000059*w^3
h = height - 16      # mean center
ha = 8.316*h - 0.0004*h^3
paritycorr = rep(20,232.6)                 # Guess no one has more than 20 kids!
paritycorr[1:4]<-c(0,147.1,197.3,215.9)
p = paritycorr[parity+1]
s = (-1)^(sex+1) * 64.435
tow = 3544.5 + wa + ha + s + p          # predicted weight at 40 weeks GA
tsd = tow*0.11        # 11 % coef. of var. from original article (gardosi 1995) matches our data
hadlock(ga, birthweight, tow, tsd)
}
M3$PCTgardosi2<-gardosi2(M3$WEIGHT_1stT,M3$HEIGHT,M3$SEX,M3$PARITY,M3$GA,M3$BIRTHWEIGHT)
M3$SGAgardosi2<-as.numeric(M3$PCTgardosi2<10)
head(M3)
table(M3$SGAgardosi,M3$SGAgardosi2)
table(M3$SGAgardosi,M3$SGAgardosi2,dnn=c("coef. from 2009","original coef."))
plot(M3$SGAgardosi[1:1000],M3$SGAgardosi2[1:1000])
plot(M3$PCTgardosi[1:1000],M3$PCTgardosi2[1:1000])
cor(M3$PCTgardosi,M3$PCTgardosi2)
cor(M3$PCTgardosi,M3$PCTgardosi2,use="c")
text(cor(M3$PCTgardosi,M3$PCTgardosi2,use="c"),x=50,y=10)
abline(0,1,col="red")
text(paste("corr.coef.:",cor(M3$PCTgardosi,M3$PCTgardosi2,use="c")),x=50,y=5)
text(paste("corr. coef.:",cor(M3$PCTgardosi,M3$PCTgardosi2,use="c")),x=50,y=5,col="darkred")
table(M3$SGAgardosi,M3$SGAgardosi2,dnn=c("coef. from 2009","original coef."))
plot(M3$PCTgardosi[1:1000],M3$PCTgardosi2[1:1000],xlab="coef. from 2009",ylab="original coef.")
abline(0,1,col="red")
text(paste("corr. coef.:",cor(M3$PCTgardosi,M3$PCTgardosi2,use="c")),x=50,y=5,col="darkred")
sd40_boys
sd40_girls
gardosi2<-function(weight,height,sex,parity,ga,birthweight) {
# sex       sex of the fetus (coded 2 for girls, 1 for boys)
# parity    parity              first child is 0
# ga        gestational age in weeks
## This algorithm uses mother information to produce a personalized expected weight at term.
## The coefficients used here come from article Gardosi 2009, "The value of customised centiles..."
## note that the means of mother height and weight do not match ours - neither does the sex correction
## but the resulting predictions do not show any systemic bias
w = weight - 63    # mean center (1st trim)
wa = 8.872*w - 0.0548*w^2 + 0.000059*w^3
h = height - 16      # mean center
ha = 8.316*h - 0.0004*h^3
paritycorr = rep(20,232.6)                 # Guess no one has more than 20 kids!
paritycorr[1:4]<-c(0,147.1,197.3,215.9)
p = paritycorr[parity+1]
s = (-1)^(sex+1) * 64.435
tow = 3544.5 + wa + ha + s + p          # predicted weight at 40 weeks GA
tsd = tow*0.11        # 11 % coef. of var. from original article (gardosi 1995) matches our data
tsd = 410
hadlock(ga, birthweight, tow, tsd)
}
M3$PCTgardosi2<-gardosi2(M3$WEIGHT_1stT,M3$HEIGHT,M3$SEX,M3$PARITY,M3$GA,M3$BIRTHWEIGHT)
M3$SGAgardosi2<-as.numeric(M3$PCTgardosi2<10)
M3$PCTgardosi<-gardosi(M3$WEIGHT_1stT,M3$HEIGHT,M3$SEX,M3$PARITY,M3$GA,M3$BIRTHWEIGHT)
M3$SGAgardosi<-as.numeric(M3$PCTgardosi<10)
table(M3$SGAgardosi,M3$SGAgardosi2,dnn=c("coef. from 2009","original coef."))
plot(M3$PCTgardosi[1:1000],M3$PCTgardosi2[1:1000],xlab="coef. from 2009",ylab="original coef.")
abline(0,1,col="red")
text(paste("corr. coef.:",cor(M3$PCTgardosi,M3$PCTgardosi2,use="c")),x=50,y=5,col="darkred")
text(paste("corr. coef.:",round(cor(M3$PCTgardosi,M3$PCTgardosi2,use="c"),digits=4)),x=50,y=5,col="darkred")
table(M3$SGAgardosi,M3$SGAgardosi2,dnn=c("coef. from 2009","original coef."))
plot(M3$PCTgardosi[1:1000],M3$PCTgardosi2[1:1000],xlab="coef. from 2009",ylab="original coef.")
abline(0,1,col="red")
text(paste("corr. coef.:",round(cor(M3$PCTgardosi,M3$PCTgardosi2,use="c"),digits=4)),x=50,y=5,col="darkred")
plot(M3$PCTgardosi[1:1000],M3$PCTgardosi2[1:1000],xlab="percentiles calculated using coef. from 2009",ylab="percentiles calculated using original coef.")
abline(0,1,col="red")
text(paste("corr. coef.:",round(cor(M3$PCTgardosi,M3$PCTgardosi2,use="c"),digits=4)),x=50,y=5,col="darkred")
-1.907345e-2
2.410053e+2
pnorm(-2)
pnorm(-2)*2
pnorm(-1)
pnorm(-1)*2
marsal=function(ga,birthweight,sex){
## equation from Marsal 1996, "intrauterine growth curves..."
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
pnorm(birthweight, mw, 0.12*mw)
}
for(i in 1:nrow(M3)){
M3$PCTmarsal[i]=marsal(M3$GA[i],M3$BIRTHWEIGHT[i],M3$SEX[i])
M3$SGAmarsal[i]=as.numeric(M3$PCTmarsal[i]<pnorm(-2))
}
nrow(M3)
marsal=function(ga,birthweight,sex){
## equation from Marsal 1996, "intrauterine growth curves..."
if(is.na(sex)) sex=0
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
pnorm(birthweight, mw, 0.12*mw)
}
for(i in 1:nrow(M3)){
M3$PCTmarsal[i]=marsal(M3$GA[i],M3$BIRTHWEIGHT[i],M3$SEX[i])
M3$SGAmarsal[i]=as.numeric(M3$PCTmarsal[i]<pnorm(-2))
}
head(M3)
M3$PCTmarsal=sapply(1:nrow(M3), function(x) marsal(M3$GA[x],M3$BIRTHWEIGHT[x],M3$SEX[x]))
warnings()
M3$SGAmarsal=as.numeric(M3$PCTmarsal<pnorm(-2))
head(M3)
M3[1:10,]
ga=M3$GA[4]
ga=M3$GA[4]; birthweight=M3$BIRTHWEIGHT[4]; sex=M3$SEX[4]
is.na(sex)
if(is.na(sex)) sex=0
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
mw
M3$PCTmarsal=sapply(1:nrow(M3), function(x) marsal(M3$GA[x]*7,M3$BIRTHWEIGHT[x],M3$SEX[x]))
M3$SGAmarsal=as.numeric(M3$PCTmarsal<pnorm(-2))
M3[1:10,]
ga=M3$GA[4]*7; birthweight=M3$BIRTHWEIGHT[4]; sex=M3$SEX[4]
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
mw
-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^3 + 1.891197*ga - 4.135122e+2
-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
-2.761948e-6*ga^4
1.744841e-3*ga^3
ga
ga=280
-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
ga=M3$GA[4]*7; birthweight=M3$BIRTHWEIGHT[4]; sex=M3$SEX[4]
ga^4
-2.761948e-6*ga^4
1.744841e-3*ga^3
- 2.893626e-1*ga^2
1.891197*ga
source('~/.active-rstudio-document', echo=TRUE)
-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
pnorm(birthweight, mw, 0.12*mw)
mw
birthweight
0.12*mw
pnorm(birthweight, mw, abs(0.12*mw))
marsal=function(ga,birthweight,sex){
## equation from Marsal 1996, "intrauterine growth curves..."
ga=M3$GA[4]*7; birthweight=M3$BIRTHWEIGHT[4]; sex=M3$SEX[4]
if(is.na(sex)) sex=0
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
pnorm(birthweight, mw, abs(0.12*mw))*100
}
M3$PCTmarsal=sapply(1:nrow(M3), function(x) marsal(M3$GA[x]*7,M3$BIRTHWEIGHT[x],M3$SEX[x]))
M3$SGAmarsal=as.numeric(M3$PCTmarsal<pnorm(-2))
M3[1:10,]
marsal=function(ga,birthweight,sex){
## equation from Marsal 1996, "intrauterine growth curves..."
if(is.na(sex)) sex=0
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 1.891197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
pnorm(birthweight, mw, abs(0.12*mw))*100
}
M3$PCTmarsal=sapply(1:nrow(M3), function(x) marsal(M3$GA[x]*7,M3$BIRTHWEIGHT[x],M3$SEX[x]))
M3$SGAmarsal=as.numeric(M3$PCTmarsal<pnorm(-2))
M3[1:10,]
marsal=function(ga,birthweight,sex){
## equation from Marsal 1996, "intrauterine growth curves..."
if(is.na(sex)) sex=0
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 18.91197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
pnorm(birthweight, mw, abs(0.12*mw))*100
}
M3$PCTmarsal=sapply(1:nrow(M3), function(x) marsal(M3$GA[x]*7,M3$BIRTHWEIGHT[x],M3$SEX[x]))
M3$SGAmarsal=as.numeric(M3$PCTmarsal<pnorm(-2))
M3[1:10,]
mw
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 18.91197*ga - 4.135122e+2
mw
sum(SGAmarsal)
sum(M3$SGAmarsal)
sum(M3$SGAmarsal,na.rm=T)
sum(M3$SGAgardosi,na.rm=T)
marsal=function(ga,birthweight,sex){
## equation from Marsal 1996, "intrauterine growth curves..."
if(is.na(sex)) sex=0
if(sex==1){
## boys
mw=-1.907345e-6*ga^4 + 1.140644e-3*ga^3 - 1.336265e-1*ga^2 + 1.976961*ga + 2.410053e+2
} else if(sex==2){
## girls
mw=-2.761948e-6*ga^4 + 1.744841e-3*ga^3 - 2.893626e-1*ga^2 + 18.91197*ga - 4.135122e+2
} else {
## things
mw=-2.278843e-6*ga^4 + 1.402168e-3*ga^3 - 2.008726e-1*ga^2 + 9.284121*ga - 4.125956e+1
}
#pnorm(birthweight, mw, abs(0.12*mw))*100
mw
}
mws=sapply(1:nrow(M3), function(x) marsal(M3$GA[x]*7,M3$BIRTHWEIGHT[x],M3$SEX[x]))
head(mws)
hist(mws,breaks=50,col="grey")
head(which(is.na(mws)))
head(M3[which(is.na(mws))])
head(M3[which(is.na(mws)),])
out=M3[,c("PREG_ID","CHILDNUM","GA","SEX","BIRTHWEIGHT",
"PCTskjaerven","PCThadlock","PCTgardosi","PCTmarsal", "SGAskjaerven","SGAhadlock","SGAgardosi","SGAmarsal")]
out$GA=out$GA*7
head(out); dim(out)
write.table(format(out, digits=4),"~/Desktop/MoBa_v6/Q1a_fetalinfo_weightpercentiles.csv", sep="\t",quote=F,row.names=F,col.names=T)
paste(unlist(strsplit(substr(Sys.time(),1,10),"-")),collapse="")
head(M3)
dim(M2)
length(M2$PREG_ID)
length(unique(M2$PREG_ID))
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_cleaning_MaternalHeightWeight.R', echo=TRUE)
system(paste("git log --pretty=format:'%h' -n 1"),intern=TRUE)
system("git log --pretty=format:'%h' -n 1",intern=TRUE)
system("git log --pretty=format:'%h' -n 1")
system("git log --pretty=format:'%h' -n 1",intern=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_cleaning_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_cleaning_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_imputing_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_cleaning_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_imputing_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/SGA-LGA_definitions_in_MoBa/defineSGA.R', echo=TRUE)
source('~/Documents/gitrep/SGA-LGA_definitions_in_MoBa/defineSGA.R', echo=TRUE)
source('~/Documents/gitrep/SGA-LGA_definitions_in_MoBa/defineSGA.R', echo=TRUE)
source('~/Documents/gitrep/SGA-LGA_definitions_in_MoBa/defineSGA.R', echo=TRUE)
source('~/Documents/gitrep/SGA-LGA_definitions_in_MoBa/defineSGA.R', echo=TRUE)
head(out)
d1=out[1:100]
d1=out[1:100,]
sum(duplicated(d1$CHILDNUM))
sum(duplicated(d1$PREG_ID))
d1=out[1:200,]
sum(duplicated(d1$PREG_ID))
d1=out[1:50,]
sum(duplicated(d1$PREG_ID))
d1=out[1:100,]
d2=out[1:100,c("PREG_ID","CHILDNUM")]
d2$TEST=runif(nrow(d2),0,100)
library(sqldf)
d3=sqldf("SELECT d1.BIRTHWEIGHT, d2.* FROM d1 INNER JOIN d2 ON d1.PREG_ID=d2.PREG_ID AND d1.CHILDNUM=d2.CHILDNUM")
head(d3)
d3
d3[which(d3$PREG_ID %in% d3$[duplicated(d3$PREG_ID)]),]
d3[which(d3$PREG_ID %in% d3$PREG_ID[duplicated(d3$PREG_ID)]),]
d1[d1$PREG_ID==50,]
d1[d1$PREG_ID==59,]
d1[d1$PREG_ID==95,]
d2=out[1:100,c("PREG_ID","CHILDNUM")]
d2=d2[-which(duplicated(d2$PREG_ID)),]
d2$TEST=runif(nrow(d2),0,100)
d3=sqldf("SELECT d1.BIRTHWEIGHT, d2.* FROM d1 INNER JOIN d2 ON d1.PREG_ID=d2.PREG_ID AND d1.CHILDNUM=d2.CHILDNUM")
d3[which(d3$PREG_ID %in% d3$PREG_ID[duplicated(d3$PREG_ID)]),]
head(d2)
d2=out[1:100,c("PREG_ID","CHILDNUM")]
d2$TEST=runif(nrow(d2),0,100)
d3=sqldf("SELECT d1.BIRTHWEIGHT, d2.* FROM d1 INNER JOIN d2 ON d1.PREG_ID=d2.PREG_ID")
d3=sqldf("SELECT d1.BIRTHWEIGHT, d2.* FROM d1 INNER JOIN d2 ON d1.PREG_ID=d2.PREG_ID AND d1.CHILDNUM=d2.CHILDNUM")
head(M)
which(M$PREG_ID==6870)
head(q1)
which(q1$PREG_ID==6870)
head(mfr)
which(mfr$PREG_ID==6870)
head(M); dim(M)
which(M$PREG_ID==6870)
head(M); dim(M)
which(mfr$PREG_ID==6870)
M=sqldf("SELECT DISTINCT mfr.AGE, q1.* FROM q1 LEFT JOIN mfr ON mfr.PREG_ID=q1.PREG_ID")
head(M); dim(M)
which(M$PREG_ID==6870)
M=sqldf("SELECT mfr.AGE, q1.* FROM q1 LEFT JOIN mfr ON mfr.PREG_ID=q1.PREG_ID")
head(M); dim(M)
which(M$PREG_ID==6870)
head(mfr); dim(mfr)
M=sqldf("SELECT DISTINCT mfr.AGE, q1.* FROM q1 LEFT JOIN mfr ON mfr.PREG_ID=q1.PREG_ID")
head(M); dim(M)
M=sqldf("SELECT DISTINCT mfr.AGE, q1.* FROM mfr LEFT JOIN q1 ON mfr.PREG_ID=q1.PREG_ID")
head(M); dim(M)
M=sqldf("SELECT DISTINCT mfr.AGE, mfr.PREG_ID, AA85, AA86, AA87, flAA85, flAA86, flAA87 FROM mfr LEFT JOIN q1 ON mfr.PREG_ID=q1.PREG_ID")
head(M); dim(M)
which(M$PREG_ID==6870)
sum(duplicated(M$PREG_ID))
head(mfr); dim(mfr)
M=sqldf("SELECT DISTINCT mfr.AGE, mfr.PREG_ID, AA85, AA86, AA87, flAA85, flAA86, flAA87 FROM mfr LEFT JOIN q1 ON mfr.PREG_ID=q1.PREG_ID")
head(M); dim(M)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_cleaning_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_imputing_MaternalHeightWeight.R', echo=TRUE)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_imputing_MaternalHeightWeight.R', echo=TRUE)
head(q1); dim(q1)
source('~/Documents/gitrep/MoBa_data_cleaning/MoBa_imputing_MaternalHeightWeight.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/gitrep/SGA-LGA_definitions_in_MoBa/defineSGA.R', echo=TRUE)
head(M); dim(M)
which(M$PREG_ID==7179)
which(mfr$PREG_ID==7179)
which(q1$PREG_ID==7179)
